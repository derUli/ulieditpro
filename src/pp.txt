#--------------------------------------------------------
#
# PP.TXT
#
# This files contains Pretty Print rules for PrintFile
#
# Author: Peter Lerup
# Date:   97-12-04
#
#--------------------------------------------------------
#

#
# C
#
TYPE =.c|.h
KEYWORDS = auto break case char const continue default do double else\
enum extern float for goto if int long register return short signed\
sizeof static struct switch typedef union unsigned void volatile while
KEYWORD-STYLE = bold
COMMENT-START = /*
COMMENT-END = */
COMMENT-SINGLE = //
COMMENT-STYLE = italic

#
# C++
#
TYPE =.cpp|.hpp
KEYWORDS = auto break case catch char class const continue default\
delete do double else enum extern float for friend goto if inline\
int long new operator private protected public register return\
short signed sizeof static struct switch this template throw try\
typedef union unsigned virtual void volatile while
KEYWORD-STYLE = bold
COMMENT-START = /*
COMMENT-END = */
COMMENT-SINGLE = //
COMMENT-STYLE = italic

#
# Java
#
TYPE =.java|.jav
KEYWORDS = break case catch char class const continue default do\
double else float for goto if int long new private protected public\
return short static switch this throw try void while false true\
abstract boolean byte byvalue extends final finally implements import\
instanceof interface native null package super synchronized throws volatile
KEYWORD-STYLE = bold
COMMENT-START = /*
COMMENT-END = */
COMMENT-SINGLE = //
COMMENT-STYLE = italic

#
# Pascal
#
TYPE =.pas|.p
KEYWORD-CASE = no
KEYWORDS = and array begin case const div do downto else end file for\
function goto if in label mod nil not object of or packed procedure\
program record repeat set then to type unit until uses var while\
with xor
KEYWORD-STYLE = underline
COMMENT-START = {
COMMENT-END = }
COMMENT-STYLE = italic

#
# Perl
#
TYPE =.pl
KEYWORDS = abs accept alarm and atan2 bind binmode bless caller chdir chmod\
chomp chop chown chr chroot close closedir cmp connect continue cos\
crypt dbmclose dbmopen defined delete die do dump each else elsif\
endgrent endhostent endnetent endprotoent endpwent endservent eof\
eq eval exec exists exit exp fcntl fileno flock for foreach fork\
format formline ge getc getgrent getgrgid getgrnam gethostbyaddr\
gethostbyname gethostent getlogin getnetbyaddr getnetbyname\
getnetent getpeername getpgrp getppid getpriority getprotobyname\
getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname\
getservbyport getservent getsockname getsockopt glob gmtime goto\
grep gt hex if index int ioctl join keys kill last lc lcfirst le\
length link listen local localtime log lstat lt m map mkdir msgctl\
msgget msgrcv msgsnd my ne new next no not oct open opendir or ord\
pack package pipe pop pos print printf prototype push q qq quotemeta\
qw qx rand read readdir readline readlink readpipe recv redo ref\
rename require reset return reverse rewinddir rindex rmdir s scalar\
seek seekdir select semctl semget semop send setgrent sethostent\
setnetent setpgrp setpriority setprotoent setpwent setservent\
setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep\
socket socketpair sort splice split sprintf sqrt srand stat study\
sub substr symlink syscall sysopen sysread sysseek system syswrite\
tell telldir tie tied time times tr truncate uc ucfirst umask undef\
unless unlink unpack unshift untie until use utime values vec wait\
waitpid wantarray warn while write x xor y
KEYWORD-STYLE = bold
COMMENT-SINGLE = #
COMMENT-STYLE = italic

